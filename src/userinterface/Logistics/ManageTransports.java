/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Logistics;

//import userinterface.Doctor.*;
import Business.DiseaseCatalog.Disease;
import Business.DiseaseCatalog.DiseaseCatalog;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.Transport.Ambulance;
import Business.Transport.Drone;
import Business.Transport.ModeOfTransport;
import Business.Transport.ModeOfTransport.Type;
import Business.Transport.TransportDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Varun
 */
public class ManageTransports extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatients
     */
    private JPanel userProcessContainer;
    private TransportDirectory transportDirectory;
    
    public ManageTransports(JPanel userProcessContainer, TransportDirectory transportDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.transportDirectory = transportDirectory;
        droneSpeedJSpinner.setVisible(false);
        populateTransportTypeComboBox();
        populateTable();
        
    }
    
    private void populateTransportTypeComboBox(){
    transportTypeJComboBox.removeAllItems();
        for (Type type : ModeOfTransport.Type.values()){
            transportTypeJComboBox.addItem(type);
        }
    
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) transportDirectoryJTable.getModel();
        
        model.setRowCount(0);
        
        int i =0;
        for(ModeOfTransport modeOfTransport : transportDirectory.getTransportList()){
            if(modeOfTransport!= null){
            Object[] row = new Object[4];
            row[0] = modeOfTransport.getId();
            row[1] = modeOfTransport;
            row[2] = modeOfTransport.getRange();
            row[3] = modeOfTransport.getStatus();

            model.addRow(row);
            }
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        transportDirectoryJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        removeTransportJButton = new javax.swing.JButton();
        addNewTransportJButton = new javax.swing.JButton();
        transportTypeJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        droneSpeedJSpinner = new javax.swing.JSpinner();
        rangeJSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        transportDirectoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Transport Name", "Range", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transportDirectoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 91, 850, 144));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Transports");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 780, 41));

        removeTransportJButton.setBackground(new java.awt.Color(153, 153, 153));
        removeTransportJButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        removeTransportJButton.setText("Remove transport");
        removeTransportJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTransportJButtonActionPerformed(evt);
            }
        });
        add(removeTransportJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 260, -1, -1));

        addNewTransportJButton.setBackground(new java.awt.Color(153, 153, 153));
        addNewTransportJButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addNewTransportJButton.setText("Add New transport");
        addNewTransportJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewTransportJButtonActionPerformed(evt);
            }
        });
        add(addNewTransportJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 230, 30));

        transportTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transportTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transportTypeJComboBoxActionPerformed(evt);
            }
        });
        add(transportTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 230, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Transport Type:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, 20));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Range(miles):");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Drone Speed(mph):");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));
        add(droneSpeedJSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 230, 30));
        add(rangeJSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 230, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/together-logo.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void removeTransportJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTransportJButtonActionPerformed

        int selectedRow = transportDirectoryJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to remove this transport vehicle ?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                ModeOfTransport modeOfTransport = (ModeOfTransport)transportDirectoryJTable.getValueAt(selectedRow, 1);
                
        JOptionPane.showMessageDialog(null,"Transport vehicle has been removed successfully!");
                
                transportDirectory.removeTransport(modeOfTransport);
                populateTable();
            }
        
        
    }//GEN-LAST:event_removeTransportJButtonActionPerformed

    private void addNewTransportJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewTransportJButtonActionPerformed
        // TODO add your handling code here:
        Type type = (Type) transportTypeJComboBox.getSelectedItem();
        ModeOfTransport modeOfTransport =transportDirectory.addTransport(type);
        if (modeOfTransport instanceof Drone){
        Drone drone = (Drone) modeOfTransport;
        drone.setRange((int) rangeJSpinner.getValue());
        drone.setSpeed((int) droneSpeedJSpinner.getValue());
        drone.setStatus("Available");
        }
        else if(modeOfTransport instanceof Ambulance){
        Ambulance ambulance = (Ambulance) modeOfTransport;
        ambulance.setRange((int) rangeJSpinner.getValue());
        ambulance.setStatus("Available");
        }
        
        populateTable();
        
    }//GEN-LAST:event_addNewTransportJButtonActionPerformed

    private void transportTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transportTypeJComboBoxActionPerformed
        // TODO add your handling code here:
        if(transportTypeJComboBox.getSelectedItem()!=null){
        Type type = (Type) transportTypeJComboBox.getSelectedItem();
        if (type.equals(ModeOfTransport.Type.Drone)){
        droneSpeedJSpinner.setVisible(true);
        }
        else{
        droneSpeedJSpinner.setVisible(false);
        }
        }
    }//GEN-LAST:event_transportTypeJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewTransportJButton;
    private javax.swing.JSpinner droneSpeedJSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner rangeJSpinner;
    private javax.swing.JButton removeTransportJButton;
    private javax.swing.JTable transportDirectoryJTable;
    private javax.swing.JComboBox transportTypeJComboBox;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InventoryManager;


import Business.EcoSystem;
import Business.Enterprise.EnterpriseDirectory;
import Business.Enterprise.SupplierEnterprise;
import Business.InventoryCatalog.InventoryCatalog;
import Business.InventoryCatalog.InventoryItem;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.OrderQueue.OrderRequest;
import Business.Organization.InventoryManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Varun
 */
public class ViewDistributorInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDistributorInventoryJPanel
     */
    JPanel userProcessContainer;
    InventoryCatalog inventoryCatalog;
    InventoryManagementOrganization inventoryManagementOrganization;
    List<SupplierEnterprise> supplierEnterpriseList;
    UserAccount userAccount;
    StateNetwork state;
    CountryNetwork country;
    EcoSystem business;
    public ViewDistributorInventoryJPanel(JPanel userProcessContainer,UserAccount account, InventoryCatalog inventoryCatalog, InventoryManagementOrganization inventoryManagementOrganization, List<SupplierEnterprise> supplierEnterpriseList, StateNetwork state, CountryNetwork country, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.inventoryCatalog = inventoryCatalog;
        this.inventoryManagementOrganization = inventoryManagementOrganization;
        this.supplierEnterpriseList = supplierEnterpriseList;
        this.supplierjComboBox.addItem("select");
        this.userAccount = account;
        this.country = country;
        this.state = state;
        this.business = business;
        populateTable();
        popSupplierEnterprise();
    }
    
    public void popSupplierEnterprise(){
        if( this.supplierEnterpriseList != null){
            for(SupplierEnterprise supplierEnterprise: this.supplierEnterpriseList){
                for(Organization supplierOrgnaization: supplierEnterprise.getOrganizationDirectory().getOrganizationList()){
                    supplierjComboBox.addItem((SupplierOrganization)supplierOrgnaization);
                }
            }
        }
    }
    
    public void popVaccineList(SupplierOrganization supplierOrganization){
        vaccinejComboBox.removeAllItems();
        if(supplierOrganization!= null){
            System.out.println(supplierOrganization.getName());
            for(InventoryItem inventoryItem: supplierOrganization.getVaccineStocksAvailable()){
                System.out.println(inventoryItem.getVaccine().getName());
                vaccinejComboBox.addItem(inventoryItem);
            }
        }
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) vaccineInventoryJTable.getModel();
        int i =0;
        model.setRowCount(0);
        if(inventoryCatalog != null) {
            for (InventoryItem inventoryItem: inventoryCatalog.getInventoryList()){
                Object[] row = new Object[3];
                row[0] = ++i;
                row[1] = inventoryItem;
                row[2] = inventoryItem.getQuantity();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineInventoryJTable = new javax.swing.JTable();
        backJButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        supplierjComboBox = new javax.swing.JComboBox();
        vaccinejComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        qtyjSpinner = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(153, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("View Inventory");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 598, 41));

        vaccineInventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl No", "Vaccine Name", "Quantity Available"
            }
        ));
        jScrollPane1.setViewportView(vaccineInventoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 660, 196));

        backJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/click-go-back-button.png"))); // NOI18N
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });
        add(backJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 100, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/together-logo.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, -1, -1));

        submitJButton.setBackground(new java.awt.Color(153, 153, 153));
        submitJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        submitJButton.setText("Raise Request");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 130, 40));

        supplierjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierjComboBoxActionPerformed(evt);
            }
        });
        add(supplierjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 130, 30));

        add(vaccinejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 130, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Supplier:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, 80, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Vaccine:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 70, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Quantity");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 70, 30));
        add(qtyjSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 130, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        if(supplierjComboBox.getSelectedIndex() >= -1 && vaccinejComboBox.getSelectedIndex() >= -1 ){
            SupplierOrganization supplierOrganization = (SupplierOrganization) supplierjComboBox.getSelectedItem();
            if(vaccinejComboBox.getSelectedItem() == null){
                JOptionPane.showMessageDialog(null, "Please select a vaccine");
                return;
            }
            
            SupplierEnterprise supent = null;
            for(SupplierEnterprise supplierEnterprise:supplierEnterpriseList){
                if(supplierEnterprise.getOrganization(supplierOrganization) != null){
                    supent = supplierEnterprise;
                }
            }
            if(supent != null){
                InventoryItem inventoryItem = (InventoryItem) vaccinejComboBox.getSelectedItem();
                int qty = (int)qtyjSpinner.getValue();
                if(qty <= 0){
                    JOptionPane.showMessageDialog(null, "Please enter valid quantity.");
                    return;
                }
                OrderRequest orderRequest = supent.getOrderQueue().addOrderRequest();
                orderRequest.setSender(userAccount);
                orderRequest.setQuantity(qty);
                orderRequest.setVaccine(inventoryItem.getVaccine());
                orderRequest.setStatus("Request sent");
                JOptionPane.showMessageDialog(null,"Successfully Sent!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Supplier enterprise not found");
                return;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Select a Supplier");
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void supplierjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierjComboBoxActionPerformed
        if(supplierjComboBox.getSelectedIndex() > 0){
            SupplierOrganization supplierOrganization = (SupplierOrganization)supplierjComboBox.getSelectedItem();
            
            vaccinejComboBox.removeAllItems();
            if(supplierOrganization!= null){
                for(InventoryItem inventoryItem: supplierOrganization.getVaccineStocksAvailable()){
                    vaccinejComboBox.addItem(inventoryItem);
                }
            }
        }
    }//GEN-LAST:event_supplierjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner qtyjSpinner;
    private javax.swing.JButton submitJButton;
    private javax.swing.JComboBox supplierjComboBox;
    private javax.swing.JTable vaccineInventoryJTable;
    private javax.swing.JComboBox vaccinejComboBox;
    // End of variables declaration//GEN-END:variables
}

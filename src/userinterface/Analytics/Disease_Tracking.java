/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Analytics;

import Business.Enterprise.HospitalEnterprise;
import Business.Network.StateNetwork;
import Business.OrderQueue.OrderRequest;
import Business.Organization.ClinicOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rohan
 */
public class Disease_Tracking extends javax.swing.JPanel {

    /**
     * Creates new form Disease_Tracking
     */
    
    JPanel userProcessContainer;
    StateNetwork network;
    
    public Disease_Tracking(JPanel userProcessContainer,StateNetwork network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diseaseTrackingjTable = new javax.swing.JTable();

        jLabel1.setText("Disease Tracking");

        diseaseTrackingjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disease", "Vaccine", "Latitiude", "Longitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(diseaseTrackingjTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void populateTable(){
    DefaultTableModel model = (DefaultTableModel)diseaseTrackingjTable.getModel();
        
        model.setRowCount(0);
        
    for(HospitalEnterprise enterprise :  network.getEnterpriseDirectory().getHospitalEnterprise()){
         if(enterprise.getOrganizationDirectory()!= null){
        for(Organization organization :enterprise.getOrganizationDirectory().getOrganizationList()){
    if(organization instanceof ClinicOrganization){
    for(UserAccount userAccount: organization.getUserAccountDirectory().getUserAccountList()){
        if(userAccount.getOrderQueue()!= null){
        for(OrderRequest request: userAccount.getOrderQueue().getOrderRequestList()){
    
        
       
            Object[] row = new Object[4];
            row[0] = request.getPatient().getDisease().getName();
            row[1] = request;
            row[2] = request.getDestinationCoordinates().getLatitude();
            row[3] = request.getDestinationCoordinates().getLongitude();

            
            model.addRow(row);
    
    
    }
    }
    }
    }
    }
         }     
            }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable diseaseTrackingjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.DiseaseCatalog.Disease;
import Business.DiseaseCatalog.DiseaseCatalog;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Varun
 */
public class ManagePatients extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatients
     */
    private JPanel userProcessContainer;
    private PatientDirectory patientDirectory;
    private DiseaseCatalog diseaseCatalog;
    
    public ManagePatients(JPanel userProcessContainer, PatientDirectory patientDirectory, DiseaseCatalog diseaseCatalog ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patientDirectory = patientDirectory;
        this.diseaseCatalog = diseaseCatalog;
        populateTable();
        
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) patientDirectoryJTable.getModel();
        
        model.setRowCount(0);
        
        int i =0;
    for(Patient patient: patientDirectory.getPatientList()){
    Object[] row = new Object[5];
            row[0] = ++i;
            row[1] = patient;
            row[2] = patient.getAge();
            row[3] = patient.getDisease();
            row[4] = patient.getBloodGroup();
            
            model.addRow(row);
    }
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientDirectoryJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        addNewPatientJButton = new javax.swing.JButton();
        removePatientJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientDirectoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl No", "Patient Name", "Age", "Disease", "Blood Group"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientDirectoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 91, 850, 144));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("My Patients");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 780, 41));

        addNewPatientJButton.setBackground(new java.awt.Color(153, 153, 153));
        addNewPatientJButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addNewPatientJButton.setText("Add New Patient");
        addNewPatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewPatientJButtonActionPerformed(evt);
            }
        });
        add(addNewPatientJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        removePatientJButton.setBackground(new java.awt.Color(153, 153, 153));
        removePatientJButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        removePatientJButton.setText("Remove Patient");
        removePatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePatientJButtonActionPerformed(evt);
            }
        });
        add(removePatientJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 260, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/together-logo.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addNewPatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewPatientJButtonActionPerformed

        AddNewPatient addNewPatient = new AddNewPatient(userProcessContainer, patientDirectory, diseaseCatalog);
        userProcessContainer.add("AddNewPatient", addNewPatient);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addNewPatientJButtonActionPerformed

    private void removePatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePatientJButtonActionPerformed
    
       int selectedRow = patientDirectoryJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to remove this Patient account ?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                Patient patient = (Patient)patientDirectoryJTable.getValueAt(selectedRow, 1);
                
        JOptionPane.showMessageDialog(null,"Patient has been removed successfully!");
                
                patientDirectory.removePatient(patient);
                populateTable();
            }
    
        
        
        
    }//GEN-LAST:event_removePatientJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewPatientJButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientDirectoryJTable;
    private javax.swing.JButton removePatientJButton;
    // End of variables declaration//GEN-END:variables
}

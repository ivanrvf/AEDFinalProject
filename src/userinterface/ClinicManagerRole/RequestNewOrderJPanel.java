/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ClinicManagerRole;


import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.StateNetwork;
import Business.OrderQueue.OrderRequest;
import Business.Organization.Organization;
import Business.SupplierDirectory.Supplier;
import Business.SupplierDirectory.VaccineStock;
import Business.UserAccount.UserAccount;
import Business.VaccineCatalog.Vaccine;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Varun
 */
public class RequestNewOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestNewOrderJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    StateNetwork network;
    public RequestNewOrderJPanel(JPanel userProcessContainer, UserAccount userAccount, StateNetwork network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.network = network;
        loadSupplierComboBox();
    }
    
    public void loadSupplierComboBox(){
        for (SupplierEnterprise supplierEnterprise: network.getEnterpriseDirectory().getSupplierEnterprise()) {
            for(Supplier supplier: supplierEnterprise.getSupplierDirectory().getSupplierList()){
                supplierListJComboBox.addItem(supplier);
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        supplierListJComboBox = new javax.swing.JComboBox();
        vaccineListJComboBox = new javax.swing.JComboBox();
        placeOrderJButton = new javax.swing.JButton();
        quantityJSpinner = new javax.swing.JSpinner();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Request New Order");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 590, 41));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Supplier:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 160, 40));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Vaccine:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 160, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Quantity:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 160, 40));

        supplierListJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplierListJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierListJComboBoxActionPerformed(evt);
            }
        });
        add(supplierListJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 210, 40));

        vaccineListJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(vaccineListJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 210, 40));

        placeOrderJButton.setBackground(new java.awt.Color(153, 153, 153));
        placeOrderJButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        placeOrderJButton.setText("Place Order");
        placeOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderJButtonActionPerformed(evt);
            }
        });
        add(placeOrderJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 190, 50));

        quantityJSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 200, 1));
        add(quantityJSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 210, 40));

        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/click-go-back-button.png"))); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 110, 50));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/together-logo.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void placeOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderJButtonActionPerformed
        // TODO add your handling code here:
//<<<<<<< HEAD
//        VaccineOrderRequest request = null;
//        for(CDCEnterprise enterprise: network.getEnterpriseDirectory().getCDCEnterprise()){
//            request = enterprise.getOrderQueue().addVaccineOrder();
//            
//        }
//        request.setVaccine((Vaccine)vaccineListJComboBox.getSelectedItem());
//        request.setQuantity((Integer)quantityJSpinner.getValue());
//        request.setSupplier((Supplier) supplierListJComboBox.getSelectedItem());
//        request.setSender(userAccount);
//        request.setStatus("Order Sent");
//        OrderRequest lastRequest = request.getLastOrderRequest();
//        //lastRequest.createAndGetNewOrderRequest().setSender(userAccount);
//        //lastRequest.createAndGetNewOrderRequest().setStatus("Order Placed");
//        JOptionPane.showMessageDialog(null,"Order placed successfully !");
//        Organization org = null;
//        userAccount.getOrderQueue().getOrderRequestList().add(request);
//=======
//        OrderRequest request = null;
//        for(CDCEnterprise enterprise: network.getEnterpriseDirectory().getCDCEnterprise()){
//            request = enterprise.getOrderQueue().addOrderRequest();
//            
//        }
//        request.setVaccine((Vaccine)vaccineListJComboBox.getSelectedItem());
//        request.setQuantity((Integer)quantityJSpinner.getValue());
//        request.setSupplier((Supplier) supplierListJComboBox.getSelectedItem());
//        request.setSender(userAccount);
//        request.setStatus("Order Sent");
//        OrderRequest lastRequest = request.getLastOrderRequest();
//        //lastRequest.createAndGetNewOrderRequest().setSender(userAccount);
//        //lastRequest.createAndGetNewOrderRequest().setStatus("Order Placed");
//        JOptionPane.showMessageDialog(null,"Order placed successfully !");
//        Organization org = null;
//        userAccount.getOrderQueue().getOrderRequestList().add(request);
//>>>>>>> 58f625acd0eef5d03568683ad41e1c22b507c445
    }//GEN-LAST:event_placeOrderJButtonActionPerformed

    private void supplierListJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierListJComboBoxActionPerformed
        // TODO add your handling code here:
        vaccineListJComboBox.removeAllItems();
        Supplier supplier = (Supplier)supplierListJComboBox.getSelectedItem();
        if(supplier!=null){
        for (VaccineStock vaccineStock: supplier.getVaccineStocksAvailable()) {
            vaccineListJComboBox.addItem(vaccineStock.getVaccine());
        }
        }

    }//GEN-LAST:event_supplierListJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton placeOrderJButton;
    private javax.swing.JSpinner quantityJSpinner;
    private javax.swing.JComboBox supplierListJComboBox;
    private javax.swing.JComboBox vaccineListJComboBox;
    // End of variables declaration//GEN-END:variables
}
